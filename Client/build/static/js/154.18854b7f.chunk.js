(this.webpackJsonpclient=this.webpackJsonpclient||[]).push([[154],{2361:function(e,t,a){"use strict";a.r(t);var o=a(208),n=a(0),r=a.n(n);t.default=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(o.a,{variant:"h4",className:"mb-24"},"Updating Fuse React"),r.a.createElement(o.a,{className:"mb-16",component:"p"},"Fuse React isn\u2019t an end product or an extension so there is no easy way to update the project. Due to the nature of apps, we cannot give any set instructions for updating Fuse React. It heavily depends on your project and it's up to you to update your code. However, there are a couple points that we want to put forward which might help you to keep Fuse React updated:"),r.a.createElement(o.a,{className:"my-16",component:"div"},r.a.createElement("ol",null,r.a.createElement("li",{className:"mb-16"},"The most important one is not to touch the /@fuse directory but sometimes that is going to be inevitable and in those cases, try to keep the modifications minimal."),r.a.createElement("li",{className:"mb-16"},"Usually React and Material UI libraries do some breaking changes and force our hands to change things. In those cases, it's always good to check their official Changelogs to see what they did. Usually they provide clear instructions and even helper tools to update your code."),r.a.createElement("li",{className:"mb-16"},"Before starting your new project,"," ",r.a.createElement("a",{href:"http://support.withinpixels.com/github",target:"_blank",rel:"noreferrer noopener"},"join our Github repo"),", fork it and build your app on top of that fork. This way, in the future, you can easily merge or compare the changes from the main repo onto your fork. This will require merging a lot of changes manually, but it's the best way to keep the Fuse React updated."))))}}}]);